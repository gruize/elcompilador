@ Programa de ejemplo
tipo rec
int tope;
real[100] valores;
endrec tsecuencia;
tipo pointer tcelda tarbol;
tipo rec
real valor;
tarbol izq;
tarbol der;
endrec tcelda;

fun aniade(real valor, tarbol & arbol)
fun inserta()
alloc arbol;
arbol^.valor = valor;
arbol^.izq = null;
arbol^.der = null;
end inserta;

if arbol == null then
inserta();
elsif arbol^.valor < valor then
aniade(valor, arbol^.izq);
elsif arbol^.valor > valor then
aniade(valor, arbol^.der);
endif;
end aniade;

fun libera(tarbol & arbol)
fun liberacion(tarbol arbol)

if arbol != null then
liberacion(arbol^.izq);
liberacion(arbol^.der);
free arbol;
endif;
end liberacion;
liberacion(arbol);
arbol := null;
end libera;

fun recolecta(tarbol & arbol)
float valor;

libera(arbol);
while in valor != 0 do
aniade(valor, arbol);
endwhile;
end recolecta;

fun aplana(tarbol arbol, tsecuencia & secuencia) returns real
fun hazAplanado(tarbol arbol) returns real
real sd;

if arbol != null then
sd = hazAplanado(arbol^.izq);
secuencia.tope = secuencia.tope+1;
secuencia.valores[secuencia.tope] = arbol^.valor;
return sd + hazAplanado(arbol^.der);
endif;
end hazAplanado;

secuencia.tope := -1;
return hazAplanado(arbol);
end aplana;

tarbol arbol;
tsecuencia secuencia;

arbol := null;
recolecta(arbol);
out aplana(arbol,secuencia);
libera(arbol);